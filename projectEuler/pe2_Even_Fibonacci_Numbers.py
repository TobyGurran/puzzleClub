#Project Euler Problem 4
#https://projecteuler.net/problem=2

#Each new term in the Fibonacci sequence is generated by adding the previous two terms.
#By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million,
#find the sum of the even-valued terms.

import numpy
num1=int(input("Enter the number you want the Fibonacci sequence to begin at: "))
num2=int(input("Enter the second number of the Fibonacci sequence: "))
numMax=int(input("Enter the Max limit of the sequence: "))

def return_fibs_below_threshold(num_1, num_2, max_threshold):
    #Create the start of your Fibonacci sequence
    fib = [num_1, num_2]

    #Loop until the next number in the sequence exceeds the max_threshold
    counter = 2
    while True:
        #Find the next number in the sequeunce
        fib_to_append = fib[counter - 2] + fib[counter - 1]

        #Check if it exceeds the limit of the stipulation
        if fib_to_append > max_threshold:
            return(fib)
        else:
            #If it doesn't exceed, then append it
            fib.append(fib_to_append)

            #increase the counter
            counter+=1

#Now call the function with the required numbers

fib_seq = return_fibs_below_threshold(num_1=num1, num_2=num2, max_threshold=numMax)

print("Lenght of selected sequence is: "+ str(len(fib_seq)))

fib_seq_even=[i for i in fib_seq if i%2==0]

print("Lenght of even sequence is: " + str(len(fib_seq_even)))
print("Sum of even sequence is: " + str(sum(fib_seq_even)))
